<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [C:\Users\SUNIL BHATNAGAR\Desktop\accident and alcohol project\accident and alcohol.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image C:\Users\SUNIL BHATNAGAR\Desktop\accident and alcohol project\accident and alcohol.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Mon Jul 03 14:18:34 2017
<BR><P>
<H3>Maximum Stack Usage =         56 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; read_gps &rArr; lcd_string &rArr; data
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[245d568]">Reset_Handler</a>
 <LI><a href="#[245d5a4]">__user_initial_stackheap</a>
 <LI><a href="#[245d7c0]">Undef_Handler</a>
 <LI><a href="#[245d784]">SWI_Handler</a>
 <LI><a href="#[245d748]">PAbt_Handler</a>
 <LI><a href="#[245d70c]">DAbt_Handler</a>
 <LI><a href="#[245d6d0]">IRQ_Handler</a>
 <LI><a href="#[245d694]">FIQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[245cc80]">display</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[245cc80]">display</a><BR>
 <LI><a href="#[245d7c0]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[245d7c0]">Undef_Handler</a><BR>
 <LI><a href="#[245d784]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[245d784]">SWI_Handler</a><BR>
 <LI><a href="#[245d748]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[245d748]">PAbt_Handler</a><BR>
 <LI><a href="#[245d70c]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[245d70c]">DAbt_Handler</a><BR>
 <LI><a href="#[245d6d0]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[245d6d0]">IRQ_Handler</a><BR>
 <LI><a href="#[245d694]">FIQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[245d694]">FIQ_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[245d568]">Reset_Handler</a>
 <LI><a href="#[245d7c0]">Undef_Handler</a>
 <LI><a href="#[245d784]">SWI_Handler</a>
 <LI><a href="#[245d748]">PAbt_Handler</a>
 <LI><a href="#[245d70c]">DAbt_Handler</a>
 <LI><a href="#[245d6d0]">IRQ_Handler</a>
 <LI><a href="#[245d694]">FIQ_Handler</a>
 <LI><a href="#[245aa0c]">__main</a>
 <LI><a href="#[245cdac]">main</a>
 <LI><a href="#[2456524]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[245d568]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[245aa0c]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2454058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[245a8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2454058]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[245aa0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[245401c]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[245a8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2453fe0]"></a>__scatterload_null</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[2453e3c]"></a>__scatterload_copy</STRONG> (ARM, 40 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2453e3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2453e3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[2453d4c]"></a>__scatterload_zeroinit</STRONG> (ARM, 44 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[24594f4]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Calls]<UL><LI><a href="#[2456f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[245a214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li (via Veneer)
</UL>

<P><STRONG><a name="[2457640]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[24576b8]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[2457a78]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[2457910]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[2457550]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[24575c8]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[2457988]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[2457898]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[2457e74]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[2457cd0]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[2457c58]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[2457be0]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[2457b68]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[2457af0]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[2457d84]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[2457514]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[2457a00]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[2457820]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[2457dfc]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[24558f4]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2456c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls (via Veneer)
</UL>

<P><STRONG><a name="[24545bc]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[24543dc]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[24543a0]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[2454508]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[2454670]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[2454490]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[245a8e0]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[245401c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[245aa0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[245a2c8]"></a>__rt_entry_presh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2459f44]"></a>__rt_entry_sh</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2459cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[245a214]"></a>__rt_entry_li</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[24594f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[245a250]"></a>__rt_entry_postsh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[245a160]"></a>__rt_entry_main</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[2459b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>

<P><STRONG><a name="[245a19c]"></a>__rt_entry_postli_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[2458d74]"></a>__rt_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2459b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[2456c68]"></a>__rt_exit_ls</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[24558f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>

<P><STRONG><a name="[2456ca4]"></a>__rt_exit_prels_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[2456c2c]"></a>__rt_exit_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2456e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[245d5a4]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2459cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[245cde8]"></a>viberation_isr</STRONG> (ARM, 84 bytes, Stack size 24 bytes, alcohol and viveration.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[245cb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_string
<LI><a href="#[245ccbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[245cdac]"></a>main</STRONG> (ARM, 288 bytes, Stack size 16 bytes, alcohol and viveration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = main &rArr; read_gps &rArr; lcd_string &rArr; data
</UL>
<BR>[Calls]<UL><LI><a href="#[245cb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_gps
<LI><a href="#[245cb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_string
<LI><a href="#[245cbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd
<LI><a href="#[245cc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_send_msg
<LI><a href="#[245cc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
<LI><a href="#[245ccbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[245ccf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command
<LI><a href="#[245cd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_UART1_init
<LI><a href="#[245cd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_UART0_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P><STRONG><a name="[245cd34]"></a>GSM_UART1_init</STRONG> (ARM, 56 bytes, Stack size 0 bytes, gsm for alcohol and accident.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[245cdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[245cd70]"></a>GPS_UART0_init</STRONG> (ARM, 56 bytes, Stack size 0 bytes, gsm for alcohol and accident.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[245cdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[245c35c]"></a>string_uart_trns_gsm</STRONG> (ARM, 56 bytes, Stack size 0 bytes, gsm for alcohol and accident.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[245cc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_send_msg
</UL>

<P><STRONG><a name="[245c320]"></a>put_char_gsm</STRONG> (ARM, 32 bytes, Stack size 0 bytes, gsm for alcohol and accident.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[245cc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_send_msg
</UL>

<P><STRONG><a name="[245c2e4]"></a>uart_recv_gsm</STRONG> (ARM, 32 bytes, Stack size 0 bytes, gsm for alcohol and accident.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[245c26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_response
</UL>

<P><STRONG><a name="[245c2a8]"></a>uart0_recv_gps</STRONG> (ARM, 32 bytes, Stack size 0 bytes, gsm for alcohol and accident.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[245cb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_gps
</UL>

<P><STRONG><a name="[245c26c]"></a>gsm_response</STRONG> (ARM, 84 bytes, Stack size 8 bytes, gsm for alcohol and accident.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gsm_response
</UL>
<BR>[Calls]<UL><LI><a href="#[245c2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_recv_gsm
</UL>
<BR>[Called By]<UL><LI><a href="#[245cc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_send_msg
</UL>

<P><STRONG><a name="[245cc44]"></a>gsm_send_msg</STRONG> (ARM, 216 bytes, Stack size 16 bytes, gsm for alcohol and accident.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gsm_send_msg &rArr; gsm_response
</UL>
<BR>[Calls]<UL><LI><a href="#[245b6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[245c26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_response
<LI><a href="#[245c320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_char_gsm
<LI><a href="#[245c35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_uart_trns_gsm
<LI><a href="#[245ccbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[245cdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[245ccbc]"></a>delay</STRONG> (ARM, 48 bytes, Stack size 0 bytes, lcd command display.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[245be70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data1
<LI><a href="#[245beac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data
<LI><a href="#[245cb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_gps
<LI><a href="#[245cb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_string
<LI><a href="#[245cc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_send_msg
<LI><a href="#[245ccf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command
<LI><a href="#[245cdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[245cde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;viberation_isr
</UL>

<P><STRONG><a name="[245ccf8]"></a>command</STRONG> (ARM, 80 bytes, Stack size 8 bytes, lcd command display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = command
</UL>
<BR>[Calls]<UL><LI><a href="#[245ccbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[245cb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_gps
<LI><a href="#[245cbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd
<LI><a href="#[245cdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[245beac]"></a>data</STRONG> (ARM, 80 bytes, Stack size 8 bytes, lcd command display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = data
</UL>
<BR>[Calls]<UL><LI><a href="#[245ccbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[245cb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_string
<LI><a href="#[245cc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
</UL>

<P><STRONG><a name="[245be70]"></a>data1</STRONG> (ARM, 104 bytes, Stack size 12 bytes, lcd command display.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[245ccbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[245cbcc]"></a>lcd</STRONG> (ARM, 68 bytes, Stack size 4 bytes, lcd command display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lcd &rArr; command
</UL>
<BR>[Calls]<UL><LI><a href="#[245ccf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command
</UL>
<BR>[Called By]<UL><LI><a href="#[245cdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[245cb90]"></a>lcd_string</STRONG> (ARM, 48 bytes, Stack size 8 bytes, lcd command display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_string &rArr; data
</UL>
<BR>[Calls]<UL><LI><a href="#[245beac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data
<LI><a href="#[245ccbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[245cb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_gps
<LI><a href="#[245cdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[245cde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;viberation_isr
</UL>

<P><STRONG><a name="[245cc80]"></a>display</STRONG> (ARM, 72 bytes, Stack size 16 bytes, lcd command display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = display &rArr;  display (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[245b498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[245beac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data
<LI><a href="#[245cc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
</UL>
<BR>[Called By]<UL><LI><a href="#[245cc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
<LI><a href="#[245cdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[245cb18]"></a>read_gps</STRONG> (ARM, 296 bytes, Stack size 24 bytes, gps reciever.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = read_gps &rArr; lcd_string &rArr; data
</UL>
<BR>[Calls]<UL><LI><a href="#[245c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_recv_gps
<LI><a href="#[245cb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_string
<LI><a href="#[245ccbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[245ccf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command
</UL>
<BR>[Called By]<UL><LI><a href="#[245cdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[245b6f0]"></a>strcmp</STRONG> (ARM, 156 bytes, Stack size 4 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[245cc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_send_msg
</UL>

<P><STRONG><a name="[245b4d4]"></a>__aeabi_idiv</STRONG> (ARM, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[245b498]"></a>__aeabi_idivmod</STRONG> (ARM, 384 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[245cc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
</UL>

<P><STRONG><a name="[245ab74]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[245ab38]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[245aafc]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2459cec]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2458e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[245d5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[2459f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[2459b84]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2458d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
<LI><a href="#[2459b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[245a160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[2458ea0]"></a>__user_libspace</STRONG> (ARM, 12 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2458e64]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2459cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2458e28]"></a>__user_perthread_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2456e84]"></a>_sys_exit</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2456c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[2456524]"></a>__I$use$semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[24564e8]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[2456fb0]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[2456f74]"></a>_fp_init</STRONG> (ARM, 4 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[24594f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[245d7c0]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[245d7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[245d7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[245d784]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[245d784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[245d784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[245d748]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[245d748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[245d748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[245d70c]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[245d70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[245d70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[245d6d0]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[245d6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[245d6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[245d694]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[245d694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[245d694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[2459b0c]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2459b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
