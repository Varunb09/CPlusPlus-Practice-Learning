<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [C:\Users\SUNIL BHATNAGAR\Desktop\SMART AUTOMATIC BILLING  TROLLEY SYSTEM\RFID BILLING SYSTEM.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image C:\Users\SUNIL BHATNAGAR\Desktop\SMART AUTOMATIC BILLING  TROLLEY SYSTEM\RFID BILLING SYSTEM.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Thu Jul 06 16:46:50 2017
<BR><P>
<H3>Maximum Stack Usage =         32 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; delete &rArr; strncmp
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[23d2568]">Reset_Handler</a>
 <LI><a href="#[23d25a4]">__user_initial_stackheap</a>
 <LI><a href="#[23d27c0]">Undef_Handler</a>
 <LI><a href="#[23d2784]">SWI_Handler</a>
 <LI><a href="#[23d2748]">PAbt_Handler</a>
 <LI><a href="#[23d270c]">DAbt_Handler</a>
 <LI><a href="#[23d26d0]">IRQ_Handler</a>
 <LI><a href="#[23d2694]">FIQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[23d1ed8]">display</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23d1ed8]">display</a><BR>
 <LI><a href="#[23d27c0]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23d27c0]">Undef_Handler</a><BR>
 <LI><a href="#[23d2784]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23d2784]">SWI_Handler</a><BR>
 <LI><a href="#[23d2748]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23d2748]">PAbt_Handler</a><BR>
 <LI><a href="#[23d270c]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23d270c]">DAbt_Handler</a><BR>
 <LI><a href="#[23d26d0]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23d26d0]">IRQ_Handler</a><BR>
 <LI><a href="#[23d2694]">FIQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23d2694]">FIQ_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[23d2568]">Reset_Handler</a>
 <LI><a href="#[23d27c0]">Undef_Handler</a>
 <LI><a href="#[23d2784]">SWI_Handler</a>
 <LI><a href="#[23d2748]">PAbt_Handler</a>
 <LI><a href="#[23d270c]">DAbt_Handler</a>
 <LI><a href="#[23d26d0]">IRQ_Handler</a>
 <LI><a href="#[23d2694]">FIQ_Handler</a>
 <LI><a href="#[23d0024]">__main</a>
 <LI><a href="#[23d1938]">main</a>
 <LI><a href="#[23cb998]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[23d2568]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[23d0024]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[23c94cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[23cfef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[23c94cc]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[23d0024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[23c9490]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23cfef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[23c9454]"></a>__scatterload_null</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[23c92b0]"></a>__scatterload_copy</STRONG> (ARM, 40 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23c92b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[23c92b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[23c91c0]"></a>__scatterload_zeroinit</STRONG> (ARM, 44 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[23ce968]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Calls]<UL><LI><a href="#[23cc3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23cf688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li (via Veneer)
</UL>

<P><STRONG><a name="[23ccab4]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[23ccb2c]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[23cceec]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[23ccd84]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[23cc9c4]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[23cca3c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[23ccdfc]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[23ccd0c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[23cd2e8]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[23cd144]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[23cd0cc]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[23cd054]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[23ccfdc]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[23ccf64]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[23cd1f8]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[23cc988]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[23cce74]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[23ccc94]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[23cd270]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[23cad68]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[23cc0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls (via Veneer)
</UL>

<P><STRONG><a name="[23c9a30]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[23c9850]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[23c9814]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[23c997c]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[23c9ae4]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[23c9904]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[23cfef8]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[23c9490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[23d0024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[23cf73c]"></a>__rt_entry_presh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[23cf3b8]"></a>__rt_entry_sh</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[23cf160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[23cf688]"></a>__rt_entry_li</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[23ce968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[23cf6c4]"></a>__rt_entry_postsh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[23cf5d4]"></a>__rt_entry_main</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[23ceff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>

<P><STRONG><a name="[23cf610]"></a>__rt_entry_postli_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[23ce1e8]"></a>__rt_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[23ceff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[23cc0dc]"></a>__rt_exit_ls</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[23cad68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>

<P><STRONG><a name="[23cc118]"></a>__rt_exit_prels_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[23cc0a0]"></a>__rt_exit_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[23cc2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[23d25a4]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23cf160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[23d2040]"></a>delay</STRONG> (ARM, 44 bytes, Stack size 0 bytes, lcd link.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23d1974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eint3_isr
<LI><a href="#[23d19b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eint1_isr
<LI><a href="#[23d1f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_string
<LI><a href="#[23d1f8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data1
<LI><a href="#[23d1fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data
<LI><a href="#[23d2004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command
</UL>

<P><STRONG><a name="[23d2004]"></a>command</STRONG> (ARM, 80 bytes, Stack size 8 bytes, lcd link.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = command
</UL>
<BR>[Calls]<UL><LI><a href="#[23d2040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[23d1938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[23d1974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eint3_isr
<LI><a href="#[23d1f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd
</UL>

<P><STRONG><a name="[23d1fc8]"></a>data</STRONG> (ARM, 80 bytes, Stack size 8 bytes, lcd link.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = data
</UL>
<BR>[Calls]<UL><LI><a href="#[23d2040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[23d1ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
<LI><a href="#[23d1f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_string
</UL>

<P><STRONG><a name="[23d1f8c]"></a>data1</STRONG> (ARM, 104 bytes, Stack size 12 bytes, lcd link.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = data1
</UL>
<BR>[Calls]<UL><LI><a href="#[23d2040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[23d1938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[23d1974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eint3_isr
</UL>

<P><STRONG><a name="[23d1f50]"></a>lcd</STRONG> (ARM, 68 bytes, Stack size 4 bytes, lcd link.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lcd &rArr; command
</UL>
<BR>[Calls]<UL><LI><a href="#[23d2004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command
</UL>
<BR>[Called By]<UL><LI><a href="#[23d18c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete
<LI><a href="#[23d18fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;billing
<LI><a href="#[23d1938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23d1f14]"></a>lcd_string</STRONG> (ARM, 48 bytes, Stack size 8 bytes, lcd link.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_string &rArr; data
</UL>
<BR>[Calls]<UL><LI><a href="#[23d1fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data
<LI><a href="#[23d2040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[23d18c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete
<LI><a href="#[23d18fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;billing
</UL>

<P><STRONG><a name="[23d1ed8]"></a>display</STRONG> (ARM, 72 bytes, Stack size 16 bytes, lcd link.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = display &rArr;  display (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23d0ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[23d1ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
<LI><a href="#[23d1fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data
</UL>
<BR>[Called By]<UL><LI><a href="#[23d1938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[23d1974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eint3_isr
<LI><a href="#[23d1ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
</UL>

<P><STRONG><a name="[23d19b0]"></a>eint1_isr</STRONG> (ARM, 76 bytes, Stack size 24 bytes, rfid billing main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23d2040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[23d1974]"></a>eint3_isr</STRONG> (ARM, 140 bytes, Stack size 32 bytes, rfid billing main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23d18fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;billing
<LI><a href="#[23d1ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
<LI><a href="#[23d1f8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data1
<LI><a href="#[23d2004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command
<LI><a href="#[23d2040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[23d1938]"></a>main</STRONG> (ARM, 268 bytes, Stack size 8 bytes, rfid billing main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = main &rArr; delete &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[23d18c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete
<LI><a href="#[23d1ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
<LI><a href="#[23d1f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd
<LI><a href="#[23d1f8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data1
<LI><a href="#[23d2004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P><STRONG><a name="[23d18fc]"></a>billing</STRONG> (ARM, 280 bytes, Stack size 8 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23d0dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[23d0eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp (via Veneer)
<LI><a href="#[23d1f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_string
<LI><a href="#[23d1f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd
</UL>
<BR>[Called By]<UL><LI><a href="#[23d1974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eint3_isr
</UL>

<P><STRONG><a name="[23d18c0]"></a>delete</STRONG> (ARM, 280 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = delete &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[23d0dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[23d0eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp (via Veneer)
<LI><a href="#[23d1f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_string
<LI><a href="#[23d1f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd
</UL>
<BR>[Called By]<UL><LI><a href="#[23d1938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23d0eac]"></a>strncmp</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[23d18c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete (via Veneer)
<LI><a href="#[23d18fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;billing (via Veneer)
</UL>

<P><STRONG><a name="[23d0dbc]"></a>__aeabi_memclr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23d18c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete
<LI><a href="#[23d18fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;billing
</UL>

<P><STRONG><a name="[23d0d80]"></a>__rt_memclr</STRONG> (ARM, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23cf9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[23d0d44]"></a>_memset</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[23d0aec]"></a>__aeabi_idiv</STRONG> (ARM, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[23d0ab0]"></a>__aeabi_idivmod</STRONG> (ARM, 384 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[23d1ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
</UL>

<P><STRONG><a name="[23d018c]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[23d0150]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[23d0114]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[23cfa84]"></a>__aeabi_memclr4</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[23cfa48]"></a>__aeabi_memclr8</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[23cfa0c]"></a>__rt_memclr_w</STRONG> (ARM, 84 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[23cf9d0]"></a>_memset_w</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[23d0d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[23cf160]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[23ce2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[23d25a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[23cf3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[23ceff8]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23ce1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
<LI><a href="#[23cef80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[23cf5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[23ce314]"></a>__user_libspace</STRONG> (ARM, 12 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[23ce2d8]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23cf160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[23ce29c]"></a>__user_perthread_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[23cc2f8]"></a>_sys_exit</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23cc0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[23cb998]"></a>__I$use$semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[23cb95c]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[23cc424]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[23cc3e8]"></a>_fp_init</STRONG> (ARM, 4 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[23ce968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[23d27c0]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[23d27c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23d27c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[23d2784]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[23d2784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23d2784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[23d2748]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[23d2748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23d2748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[23d270c]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[23d270c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23d270c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[23d26d0]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[23d26d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23d26d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[23d2694]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[23d2694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23d2694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[23cef80]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[23ceff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
